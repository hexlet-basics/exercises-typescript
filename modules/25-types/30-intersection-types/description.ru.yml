---

name: Пересечение (Intersections Types)
theory: |

  Вместе с объединением важной операцией в теории множеств является пересечение. Для разработчиков, привыкших к динамике JavaScript, эта операция может показаться менее значимой, но без нее не обойтись, например при описании типа слияния объектов.

  Пересечение указывается с помощью символа `&`, по обе стороны от которого располагаются типы. Давайте определим тип объекта со статусом заказа, а затем более строгий тип с точной ценой в сотню:

  ```typescript
  type Order = {
    status: 'Created',
  }

  type OneHundredOrder = Order & {
    cost: 100
  }

  const myOrder: OneHundredOrder = {
      status: 'Created',
      cost: 100
  }
  ```

  Из пересечения объектных типов с полями `status` **И** `cost`, мы получили тип `OneHundredOrder`, который содержит оба этих поля.

  Тип – это множество значений. Когда мы объединяем типы, мы получаем новый тип, который содержит все значения подходящие под ограничения обоих типов.

  Если мы объявим переменную `const StringAndNumber: string & number`, то ей нужно будет присвоить такое значение, которое одновременно принадлежит множествам `string` и `number`, то есть является одновременно и строкой, и числом. Такое значение не существует, поэтому `StringAndNumber` будет иметь тип `never`.

instructions: |

  1. Определите и экспортируйте тип `Person`, который должен содержать свойства name, surname и age.

  2. Определите и экспортируйте тип `Worker`, который должен пересекаться с типом `Person` и содержать свойства post и salary.
